name: 🔬 Test Front End
run-name: "${{ github.ref_name == 'main' && 'PRD' || 'STG' }} - Test ${{ github.event_name == 'pull_request' && format('PR #{0}: {1} on ', github.event.pull_request.number, github.event.pull_request.title) || format('latest `{0}` in ', github.ref_name) }}"

on:
  workflow_call:
  workflow_dispatch:
  # pull_request:
  #   paths:
  #     - "front/**"
  #   branches: [main, develop]

permissions:
  checks: write
  contents: write

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  visual_regression:
    name: 🙈 BackstopJS
    runs-on: ubuntu-latest

    concurrency:
      group: tests
      cancel-in-progress: true

    environment:
      name: ${{ github.ref_name == 'main' && 'prd' || 'stg' }}

    env:
      DEPLOY_ENV: ${{ github.ref_name == 'main' && 'production' || 'staging' }}

    steps:
      - name: 𐂷 Checkout
        uses: actions/checkout@v3
        with:
          repository: dgrebb/dgrebb.com
          ref: ${{ github.ref }}
          token: ${{ github.token }}
          fetch-depth: 0

      - name: ⬢ Setup Node & Cache
        uses: actions/setup-node@v3
        with:
          node-version: "18.17.1"
          cache: "npm"
          cache-dependency-path: |
            _ci/backstop/package.json
            _ci/backstop/package-lock.json
            _ci/backstop/node_modules

      - name: ↧ Install & Patch
        run: cd _ci/backstop && npm ci

      - name: ⌛️ Running Visual Regression
        id: backstop
        run: cd _ci/backstop && ENV=$DEPLOY_ENV npm run test.gh

      - name: ${{ steps.backstop.conclusion == 'failure' && '❌ Failure' || '✅ Success' }}
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: backstop-report
          retention-days: 3
          path: _ci/backstop/bd/

      - name: Summary
        if: always()
        run: |
          cd _ci/backstop
          FAIL_TABLE=$(./_utils/parse-report.sh)
          echo "# Backstop Summary" >> $GITHUB_STEP_SUMMARY
          echo $FAIL_TABLE >> $GITHUB_STEP_SUMMARY
