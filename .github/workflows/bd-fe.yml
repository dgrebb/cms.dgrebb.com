name: üöú B&D Front End

on:
  workflow_dispatch:
    branches: [main, develop]
  pull_request:
    paths:
      - "front/**"
    branches: [main, develop]
env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build:
    name: üöú Build & Deploy
    runs-on: ubuntu-latest
    concurrency:
      group: frontend
      cancel-in-progress: true

    environment:
      name: ${{ github.ref_name == 'main' && 'prd' || 'stg' }}

    steps:
      - name: êÇ∑ Checkout
        uses: actions/checkout@v3
        with:
          repository: dgrebb/dgrebb.com
          ref: ${{ github.ref }}
          token: ${{ github.token }}
          fetch-depth: 0

      - name: ‚öô Set .env
        run: |
          touch front/.env
          echo PUBLIC_API_URL='${{ secrets.PUBLIC_API_URL }}' >> front/.env
          echo PUBLIC_API_PATH_NAVIGATION='${{ secrets.PUBLIC_API_PATH_NAVIGATION }}' >> front/.env
          echo PUBLIC_API_PATH_HOME='${{ secrets.PUBLIC_API_PATH_HOME }}' >> front/.env
          echo PUBLIC_API_PATH_FOOTER='${{ secrets.PUBLIC_API_PATH_FOOTER }}' >> front/.env
          echo PUBLIC_API_PATH_PRIVACY='${{ secrets.PUBLIC_API_PATH_PRIVACY }}' >> front/.env
          echo PUBLIC_API_PATH_POSTS_PAGE='${{ secrets.PUBLIC_API_PATH_POSTS_PAGE }}' >> front/.env
          echo PUBLIC_API_PATH_POSTS='${{ secrets.PUBLIC_API_PATH_POSTS }}' >> front/.env
          echo PUBLIC_POSTS_PREVIEW_PARAMS='${{ secrets.PUBLIC_POSTS_PREVIEW_PARAMS }}' >> front/.env
          echo PUBLIC_API_PATH_POST='${{ secrets.PUBLIC_API_PATH_POST }}' >> front/.env
          echo PUBLIC_POST_PARAMS='${{ secrets.PUBLIC_POST_PARAMS }}' >> front/.env
          echo PUBLIC_API_PATH_CATEGORY='${{ secrets.PUBLIC_API_PATH_CATEGORY }}' >> front/.env
          echo PUBLIC_CATEGORY_PAGE_PARAMS='${{ secrets.PUBLIC_CATEGORY_PAGE_PARAMS }}' >> front/.env
          echo API_KEY=${{ secrets.API_KEY }} >> front/.env
          echo PUBLIC_SENTRY_DSN=${{ secrets.PUBLIC_SENTRY_DSN }} >> front/.env
          echo PUBLIC_ENV=${{ secrets.PUBLIC_ENV }} >> front/.env
          echo SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} >> front/.env
          cat front/.env

      - name: ‚¨¢ Setup Node & Cache
        uses: actions/setup-node@v3
        with:
          node-version: "18.17.1"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: ‚Üß Install & Patch
        run: cd front && npm ci

      - name: üìõ Set Sentry Release
        if: ${{ github.ref_name != 'main' }}
        env:
          name: "${{env.BRANCH_NAME}}"
        run: |
          echo "RELEASE_NAME=stg-${name/\//-}" >> $GITHUB_ENV

      - name: ‚Üª Build
        id: build
        run: >
          cd front &&
          SENTRY_RELEASE=${{ env.RELEASE_NAME }}
          SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} 
          npm run build

      - name: ü§ñ Robots
        if: ${{ github.ref_name == 'main' }}
        run: |
          sed -i 's/^Disallow\: \/$/Allow\: \//' front/build/robots.txt

      - name: ‚Üï Sync S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete --cache-control max-age=2853200,public
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: "front/build"

      - name: ‚àÖ Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          PATHS: "/*"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # sentry:
  #   name: ‚üÅ Sentry Release
  #   runs-on: ubuntu-latest
  #   concurrency:
  #     group: sentry
  #     cancel-in-progress: true
  #   needs: build

  #   steps:
  #     - name: üìõ Set Friendly Branch Name
  #       if: ${{ github.ref_name != 'main' }}
  #       env:
  #         name: "${{env.BRANCH_NAME}}"
  #       run: |
  #         echo "MODIFIED_BRANCH_NAME=${name/\//-}" >> $GITHUB_ENV

  #     - name: üìã Release Summary
  #       run: |
  #         SUMMARY=$'# Sentry Release Summary\n- Environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}\n- Finalize: ${{ github.ref_name == 'main' && true || false }}\n- Version: ${{ github.ref_name == 'main' && '${{ GITHUB_REF }}' || 'stg-' }}${{ env.MODIFIED_BRANCH_NAME }}'
  #         echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

  #     - name: üì¶ Download Build Artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: build

  #     - name: üó∫Ô∏è Release & Map
  #       uses: getsentry/action-release@v1
  #       env:
  #         SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  #         SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
  #         SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
  #       with:
  #         environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}
  #         finalize: ${{ github.ref_name == 'main' && true || false }}
  #         sourcemaps: "s"
  #         version: ${{ github.ref_name == 'main' && '${{ GITHUB_REF }}' || 'stg-' }}${{ env.MODIFIED_BRANCH_NAME }}'
