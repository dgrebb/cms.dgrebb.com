name: "Install and Cache Dependencies"
description: "Sets up caches and/or installs project dependencies."
author: dgrebb

inputs:
  WORKSPACE_ROOT:
    description: Working Directory
  BROWSER_BINARIES:
    description: If the workflow needs BackstopJS testing, install and cache browser binaries.
    default: "false"

runs:
  using: composite
  steps:
    # - name: âš„ Setup pnpm
    #   uses: pnpm/action-setup@v2
    #   with:
    #     version: 8

    # - name: â¬¢ Setup Node & pnpm Cache
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: ${{ env.NODE_VERSION }}
    #     cache: pnpm
    #     cache-dependency-path: |
    #       ${{ inputs.WORKSPACE_ROOT }}/package.json
    #       ${{ inputs.WORKSPACE_ROOT }}/pnpm-lock.yaml
    #       ${{ inputs.WORKSPACE_ROOT }}/node_modules

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install pnpm
      shell: bash
      run: npm install -g pnpm@9

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: ðŸŽ­ Install & Cache Playwright Binaries
      if: ${{ inputs.BROWSER_BINARIES }}
      shell: bash
      working-directory: ${{ inputs.WORKSPACE_ROOT }}
      id: playwright-version
      run: echo "PLAYWRIGHT_VERSION=$(cat package.json | jq -r '.dependencies.playwright' || 'latest')" >> $GITHUB_ENV

    - uses: actions/cache@v4
      if: ${{ inputs.BROWSER_BINARIES }}
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

    - shell: bash
      if: ${{ inputs.BROWSER_BINARIES && steps.playwright-cache.outputs.cache-hit != 'true' }}
      working-directory: ${{ inputs.WORKSPACE_ROOT }}
      run: pnpx playwright install --with-deps

    - shell: bash
      if: ${{ inputs.BROWSER_BINARIES && steps.playwright-cache.outputs.cache-hit != 'true' }}
      working-directory: ${{ inputs.WORKSPACE_ROOT }}
      run: pnpx playwright install-deps

    - name: â†§ Install Remaining Dependencies
      shell: bash
      working-directory: ${{ inputs.WORKSPACE_ROOT }}
      run: pnpm install
