name: Build & Deploy

on:
  
  push:
    branches:
      - develop
    paths:
      - front

  repository_dispatch:
    types:
      - Strapi

jobs:
  dance:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'prd' || 'stg' }}

    steps:
      - name: (Optional) Local Docker Package Install
        if: ${{ env.ACT }}
        run: |
          apt-get update
          apt-get install -y wget curl unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install

      - name: Add Masks
        run: |
          echo "::add-mask::${{ github.token }}"
          echo "::add-mask::${{ secrets.PUBLIC_API_URL }}"
          echo "::add-mask::${{ secrets.API_KEY }}"
          echo "::add-mask::${{ secrets.PUBLIC_SENTRY_DSN }}"
          echo "::add-mask::${{ secrets.PUBLIC_ENV }}"
          echo "::add-mask::${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "::add-mask::${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          echo "::add-mask::${{ secrets.AWS_REGION }}"
          echo "::add-mask::${{ secrets.AWS_S3_BUCKET }}"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: dgrebb/dgrebb.com
          ref: ${{ secrets.DEPLOYMENT_BRANCH }}
          token: ${{ github.token }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Set .env
        run: |
          touch front/.env
          echo PUBLIC_API_URL=${{ secrets.PUBLIC_API_URL }} >> front/.env
          echo API_KEY=${{ secrets.API_KEY }} >> front/.env
          echo PUBLIC_SENTRY_DSN=${{ secrets.PUBLIC_SENTRY_DSN }} >> front/.env
          echo PUBLIC_ENV=${{ secrets.PUBLIC_ENV }} >> front/.env
          cat front/.env

      - name: Build
        id: npm-build
        env:
          GH_TOKEN: ${{ github.token }}
        run: bash _ci/build.sh

      - name: Deploy
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: "front/build"

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          PATHS: "/*"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
