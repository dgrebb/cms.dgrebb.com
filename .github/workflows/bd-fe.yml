name: ðŸšœ B&D Front End

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "front/**"
    branches: [main, develop]

jobs:
  front:
    name: Build & Deploy
    concurrency:
      group: frontend
      cancel-in-progress: true
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref_name == 'main' && 'prd' || 'stg' }}

    steps:
      - name:  Checkout
        uses: actions/checkout@v3
        with:
          repository: dgrebb/dgrebb.com
          ref: ${{ github.ref }}
          token: ${{ github.token }}
          fetch-depth: 0

      - name: âš™ Set .env
        run: |
          touch front/.env
          echo PUBLIC_API_URL='${{ secrets.PUBLIC_API_URL }}' >> front/.env
          echo PUBLIC_API_PATH_NAVIGATION='${{ secrets.PUBLIC_API_PATH_NAVIGATION }}' >> front/.env
          echo PUBLIC_API_PATH_HOME='${{ secrets.PUBLIC_API_PATH_HOME }}' >> front/.env
          echo PUBLIC_API_PATH_FOOTER='${{ secrets.PUBLIC_API_PATH_FOOTER }}' >> front/.env
          echo PUBLIC_API_PATH_PRIVACY='${{ secrets.PUBLIC_API_PATH_PRIVACY }}' >> front/.env
          echo PUBLIC_API_PATH_POSTS_PAGE='${{ secrets.PUBLIC_API_PATH_POSTS_PAGE }}' >> front/.env
          echo PUBLIC_API_PATH_POSTS='${{ secrets.PUBLIC_API_PATH_POSTS }}' >> front/.env
          echo PUBLIC_POSTS_PREVIEW_PARAMS='${{ secrets.PUBLIC_POSTS_PREVIEW_PARAMS }}' >> front/.env
          echo PUBLIC_API_PATH_POST='${{ secrets.PUBLIC_API_PATH_POST }}' >> front/.env
          echo PUBLIC_POST_PARAMS='${{ secrets.PUBLIC_POST_PARAMS }}' >> front/.env
          echo PUBLIC_API_PATH_CATEGORY='${{ secrets.PUBLIC_API_PATH_CATEGORY }}' >> front/.env
          echo PUBLIC_CATEGORY_PAGE_PARAMS='${{ secrets.PUBLIC_CATEGORY_PAGE_PARAMS }}' >> front/.env
          echo API_KEY=${{ secrets.API_KEY }} >> front/.env
          echo PUBLIC_SENTRY_DSN=${{ secrets.PUBLIC_SENTRY_DSN }} >> front/.env
          echo PUBLIC_ENV=${{ secrets.PUBLIC_ENV }} >> front/.env
          cat front/.env

      - name: â¬¢ Setup Node & Cache
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: front/package-lock.json
        
      - name: â†§ Install
        run: cd front && npm ci

      - name: â†» Build
        run: cd front && npm run build

      - name: ðŸ¤– Robots
        if: ${{ github.ref_name == 'main' }}
        run: |
          sed -i 's/^Disallow\: \/$/Allow\: \//' front/build/robots.txt

      - name: â†¥ Deploy
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete --cache-control max-age=2853200,public
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: "front/build"

      - name: âˆ… Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          PATHS: "/*"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
