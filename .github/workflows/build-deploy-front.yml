name: Build & Deploy Frontend

on:
  workflow_dispatch

jobs:
  front:
    name: Frontend
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref_name == 'main' && 'prd' || 'stg' }}

    steps:

      - name: Branch Information
        run: |
          printf "\033[0;34mgithub.ref:\033[0m ${{ github.ref }}\n"
          printf "\033[0;34mgithub.base_ref:\033[0m ${{ github.base_ref }}\n"
          printf "\033[0;34mgithub.ref_name:\033[0m ${{ github.ref_name }}\n"
          printf "\033[0;34mgithub.sha:\033[0m ${{ github.sha }}\n"
          printf "\033[0;34mGITHUB_REF:\033[0m $GITHUB_REF\n"
          printf "\033[0;34mGITHUB_REF_NAME:\033[0m $GITHUB_REF_NAME\n"
          printf "\033[0;34mGITHUB_SHA:\033[0m $GITHUB_SHA\n"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: dgrebb/dgrebb.com
          ref: ${{ github.ref }}
          token: ${{ github.token }}
          fetch-depth: 0

      - name: Inspect Checkout
        run: |
          printf $(git log -n 5)

      - name: Post-Checkout Branch Information
        run: |
          printf "\033[0;34mgithub.ref:\033[0m ${{ github.ref }}\n"
          printf "\033[0;34mgithub.base_ref:\033[0m ${{ github.base_ref }}\n"
          printf "\033[0;34mgithub.ref_name:\033[0m ${{ github.ref_name }}\n"
          printf "\033[0;34mgithub.sha:\033[0m ${{ github.sha }}\n"
          printf "\033[0;34mGITHUB_REF:\033[0m $GITHUB_REF\n"
          printf "\033[0;34mGITHUB_REF_NAME:\033[0m $GITHUB_REF_NAME\n"
          printf "\033[0;34mGITHUB_SHA:\033[0m $GITHUB_SHA\n"

      - name: Set .env
        run: |
          touch front/.env
          echo PUBLIC_MEDIA_URL='' >> front/.env
          echo PUBLIC_API_URL='${{ secrets.PUBLIC_API_URL }}' >> front/.env
          echo PUBLIC_API_PATH_NAVIGATION='${{ secrets.PUBLIC_API_PATH_NAVIGATION }}' >> front/.env
          echo PUBLIC_API_PATH_HOME='${{ secrets.PUBLIC_API_PATH_HOME }}' >> front/.env
          echo PUBLIC_API_PATH_FOOTER='${{ secrets.PUBLIC_API_PATH_FOOTER }}' >> front/.env
          echo API_KEY=${{ secrets.API_KEY }} >> front/.env
          echo PUBLIC_SENTRY_DSN=${{ secrets.PUBLIC_SENTRY_DSN }} >> front/.env
          echo PUBLIC_ENV=${{ secrets.PUBLIC_ENV }} >> front/.env
          cat front/.env

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Build
        id: npm-build
        env:
          GH_TOKEN: ${{ github.token }}
        run: bash _ci/build.sh

      - name: Robots
        if: ${{ github.ref_name == 'main' }}
        run: |
          sed -i 's/^Disallow\: \/$/Allow\: \//' front/build/robots.txt

      - name: Deploy
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: "front/build"

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          PATHS: "/*"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
