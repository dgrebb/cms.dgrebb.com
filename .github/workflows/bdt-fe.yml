name: 🚜 Build, Deploy, and Test
run-name: "🚜 ${{ github.ref_name == 'main' && 'PRD' || 'STG' }} - Build, Deploy, and Test - ${{ github.event_name == 'pull_request' && format('PR #{0}: {1}', github.event.pull_request.number, github.event.pull_request.title) || format('latest {0}', github.ref_name) }}"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "front/**"
    branches: [main, develop]
  push:
    paths:
      - "front/**"
    branches: [main, develop]

permissions:
  checks: write
  contents: write
  pull-requests: write

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  lint:
    name: 💨
    uses: ./.github/workflows/lint.yml
    
  build_deploy:
    name: 🚀 
    needs: lint
    uses: ./.github/workflows/bd-fe.yml
    secrets:
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      PUBLIC_API_URL: ${{ secrets.PUBLIC_API_URL }}
      PUBLIC_API_PATH_NAVIGATION: ${{ secrets.PUBLIC_API_PATH_NAVIGATION }}
      PUBLIC_API_PATH_HOME: ${{ secrets.PUBLIC_API_PATH_HOME }}
      PUBLIC_API_PATH_FOOTER: ${{ secrets.PUBLIC_API_PATH_FOOTER }}
      PUBLIC_API_PATH_PRIVACY: ${{ secrets.PUBLIC_API_PATH_PRIVACY }}
      PUBLIC_API_PATH_POSTS_PAGE: ${{ secrets.PUBLIC_API_PATH_POSTS_PAGE }}
      PUBLIC_API_PATH_POSTS: ${{ secrets.PUBLIC_API_PATH_POSTS }}
      PUBLIC_POSTS_PREVIEW_PARAMS: ${{ secrets.PUBLIC_POSTS_PREVIEW_PARAMS }}
      PUBLIC_API_PATH_POST: ${{ secrets.PUBLIC_API_PATH_POST }}
      PUBLIC_POST_PARAMS: ${{ secrets.PUBLIC_POST_PARAMS }}
      PUBLIC_API_PATH_CATEGORY: ${{ secrets.PUBLIC_API_PATH_CATEGORY }}
      PUBLIC_CATEGORY_PAGE_PARAMS: ${{ secrets.PUBLIC_CATEGORY_PAGE_PARAMS }}
      API_KEY: ${{ secrets.API_KEY }}
      PUBLIC_SENTRY_DSN: ${{ secrets.PUBLIC_SENTRY_DSN }}
      PUBLIC_ENV: ${{ secrets.PUBLIC_ENV }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
      GH_WORKFLOW_TOKEN: ${{ secrets.GH_WORKFLOW_TOKEN }}

  backstop:
    name: 👀 
    needs: build_deploy
    uses: ./.github/workflows/test-backstop.yml
    secrets:
      GH_WORKFLOW_TOKEN: ${{ secrets.GH_WORKFLOW_TOKEN }}
      AWS_S3_BUCKET_REPORTS: ${{ secrets.AWS_S3_BUCKET_REPORTS }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      REPORTS_DISTRIBUTION: ${{ secrets.REPORTS_DISTRIBUTION }}

  lighthouse:
    name: 🕯️
    needs: build_deploy
    uses: ./.github/workflows/test-lighthouse.yml
    secrets:
      AWS_S3_BUCKET_REPORTS: ${{ secrets.AWS_S3_BUCKET_REPORTS }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      REPORTS_DISTRIBUTION: ${{ secrets.REPORTS_DISTRIBUTION }}
      GH_WORKFLOW_TOKEN: ${{ secrets.GH_WORKFLOW_TOKEN }}

  pagespeed:
    name: 📈
    needs: build_deploy
    uses: ./.github/workflows/test-psi.yml
    secrets:
      PSI_APIKEY: ${{ secrets.PSI_APIKEY }}
      GH_WORKFLOW_TOKEN: ${{ secrets.GH_WORKFLOW_TOKEN }}

  cleanup:
    name: 🧹 Cleanup
    needs: [build_deploy, backstop, lighthouse, pagespeed]
    runs-on: ubuntu-latest
    concurrency:
      group: build-deploy
      cancel-in-progress: true
    steps:
      - name: Delete Previous deployments
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_WORKFLOW_TOKEN }}
          script: |
            const deployments = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha
            });
            await Promise.all(
              deployments.data.map(async (deployment) => {
                await github.rest.repos.createDeploymentStatus({ 
                  owner: context.repo.owner, 
                  repo: context.repo.repo, 
                  deployment_id: deployment.id, 
                  state: 'inactive' 
                });
                return github.rest.repos.deleteDeployment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id
                });
              })
            );
